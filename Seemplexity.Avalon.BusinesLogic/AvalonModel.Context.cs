//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Seemplexity.Avalon.BusinesLogic
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Avalon : DbContext
    {
        public Avalon()
            : base("name=Avalon")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AddDescript1> AddDescript1 { get; set; }
        public virtual DbSet<AddDescript2> AddDescript2 { get; set; }
        public virtual DbSet<Service> Services { get; set; }
        public virtual DbSet<ServiceList> ServiceLists { get; set; }
        public virtual DbSet<tbl_Costs> tbl_Costs { get; set; }
        public virtual DbSet<tbl_TurList> tbl_TurList { get; set; }
        public virtual DbSet<TurDate> TurDates { get; set; }
        public virtual DbSet<TurService> TurServices { get; set; }
        public virtual DbSet<TipTur> TipTurs { get; set; }
        public virtual DbSet<tbl_Country> tbl_Country { get; set; }
        public virtual DbSet<Vehicle> Vehicles { get; set; }
        public virtual DbSet<VehiclePlan> VehiclePlans { get; set; }
        public virtual DbSet<HotelDictionary> HotelDictionaries { get; set; }
        public virtual DbSet<tbl_Turist> tbl_Turist { get; set; }
        public virtual DbSet<TuristService> TuristServices { get; set; }
        public virtual DbSet<ExcurDictionary> ExcurDictionaries { get; set; }
    
        public virtual int GetServiceCost(Nullable<int> svKey, Nullable<int> code, Nullable<int> code1, Nullable<int> code2, Nullable<int> prKey, Nullable<int> packetKey, Nullable<System.DateTime> date, Nullable<int> days, string resRate, Nullable<int> men, Nullable<decimal> discountPercent, Nullable<decimal> margin, Nullable<int> marginType, Nullable<System.DateTime> sellDate, ObjectParameter netto, ObjectParameter brutto, ObjectParameter discount, ObjectParameter nettoDetail, ObjectParameter sBadRate, ObjectParameter dtBadDate, ObjectParameter sDetailed, ObjectParameter nSPId, ObjectParameter useDiscountDays, Nullable<int> tourKey, Nullable<System.DateTime> tourDate, Nullable<int> tourDays, Nullable<bool> includeAddCost, ObjectParameter isCommission)
        {
            var svKeyParameter = svKey.HasValue ?
                new ObjectParameter("svKey", svKey) :
                new ObjectParameter("svKey", typeof(int));
    
            var codeParameter = code.HasValue ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(int));
    
            var code1Parameter = code1.HasValue ?
                new ObjectParameter("code1", code1) :
                new ObjectParameter("code1", typeof(int));
    
            var code2Parameter = code2.HasValue ?
                new ObjectParameter("code2", code2) :
                new ObjectParameter("code2", typeof(int));
    
            var prKeyParameter = prKey.HasValue ?
                new ObjectParameter("prKey", prKey) :
                new ObjectParameter("prKey", typeof(int));
    
            var packetKeyParameter = packetKey.HasValue ?
                new ObjectParameter("packetKey", packetKey) :
                new ObjectParameter("packetKey", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            var daysParameter = days.HasValue ?
                new ObjectParameter("days", days) :
                new ObjectParameter("days", typeof(int));
    
            var resRateParameter = resRate != null ?
                new ObjectParameter("resRate", resRate) :
                new ObjectParameter("resRate", typeof(string));
    
            var menParameter = men.HasValue ?
                new ObjectParameter("men", men) :
                new ObjectParameter("men", typeof(int));
    
            var discountPercentParameter = discountPercent.HasValue ?
                new ObjectParameter("discountPercent", discountPercent) :
                new ObjectParameter("discountPercent", typeof(decimal));
    
            var marginParameter = margin.HasValue ?
                new ObjectParameter("margin", margin) :
                new ObjectParameter("margin", typeof(decimal));
    
            var marginTypeParameter = marginType.HasValue ?
                new ObjectParameter("marginType", marginType) :
                new ObjectParameter("marginType", typeof(int));
    
            var sellDateParameter = sellDate.HasValue ?
                new ObjectParameter("sellDate", sellDate) :
                new ObjectParameter("sellDate", typeof(System.DateTime));
    
            var tourKeyParameter = tourKey.HasValue ?
                new ObjectParameter("tourKey", tourKey) :
                new ObjectParameter("tourKey", typeof(int));
    
            var tourDateParameter = tourDate.HasValue ?
                new ObjectParameter("tourDate", tourDate) :
                new ObjectParameter("tourDate", typeof(System.DateTime));
    
            var tourDaysParameter = tourDays.HasValue ?
                new ObjectParameter("tourDays", tourDays) :
                new ObjectParameter("tourDays", typeof(int));
    
            var includeAddCostParameter = includeAddCost.HasValue ?
                new ObjectParameter("includeAddCost", includeAddCost) :
                new ObjectParameter("includeAddCost", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetServiceCost", svKeyParameter, codeParameter, code1Parameter, code2Parameter, prKeyParameter, packetKeyParameter, dateParameter, daysParameter, resRateParameter, menParameter, discountPercentParameter, marginParameter, marginTypeParameter, sellDateParameter, netto, brutto, discount, nettoDetail, sBadRate, dtBadDate, sDetailed, nSPId, useDiscountDays, tourKeyParameter, tourDateParameter, tourDaysParameter, includeAddCostParameter, isCommission);
        }
    
        public virtual int InsDogList(string sDogovor, Nullable<System.DateTime> dTour, Nullable<int> nSvKey, string sService, Nullable<int> nDay, Nullable<int> nCode, Nullable<int> nCode1, Nullable<int> nCode2, Nullable<int> nNDays, Nullable<int> nCountry, Nullable<int> nCity, Nullable<int> nPartner, Nullable<int> nAgent, Nullable<int> nMen, Nullable<decimal> nNetto, Nullable<decimal> nBrutto, Nullable<decimal> nDiscount, Nullable<int> nPaket, Nullable<int> nTour, Nullable<int> nAttribute, Nullable<int> nControl, Nullable<int> nCreator, Nullable<int> nOwner, Nullable<System.DateTime> dBeg, Nullable<System.DateTime> dEnd, Nullable<System.DateTime> tTime, Nullable<int> p_nIsComtmntFirst, ObjectParameter bRet, ObjectParameter nPrmPlaceNoHave, ObjectParameter dPrmBadDate, ObjectParameter nNewKey, Nullable<int> nDGKey, string sComment, string sFormulaNetto, string sFormulaBrutto, string sFormulaDiscount, string sServiceLat, Nullable<int> nPrtDog, Nullable<int> nTaxZone, Nullable<bool> bWait)
        {
            var sDogovorParameter = sDogovor != null ?
                new ObjectParameter("sDogovor", sDogovor) :
                new ObjectParameter("sDogovor", typeof(string));
    
            var dTourParameter = dTour.HasValue ?
                new ObjectParameter("dTour", dTour) :
                new ObjectParameter("dTour", typeof(System.DateTime));
    
            var nSvKeyParameter = nSvKey.HasValue ?
                new ObjectParameter("nSvKey", nSvKey) :
                new ObjectParameter("nSvKey", typeof(int));
    
            var sServiceParameter = sService != null ?
                new ObjectParameter("sService", sService) :
                new ObjectParameter("sService", typeof(string));
    
            var nDayParameter = nDay.HasValue ?
                new ObjectParameter("nDay", nDay) :
                new ObjectParameter("nDay", typeof(int));
    
            var nCodeParameter = nCode.HasValue ?
                new ObjectParameter("nCode", nCode) :
                new ObjectParameter("nCode", typeof(int));
    
            var nCode1Parameter = nCode1.HasValue ?
                new ObjectParameter("nCode1", nCode1) :
                new ObjectParameter("nCode1", typeof(int));
    
            var nCode2Parameter = nCode2.HasValue ?
                new ObjectParameter("nCode2", nCode2) :
                new ObjectParameter("nCode2", typeof(int));
    
            var nNDaysParameter = nNDays.HasValue ?
                new ObjectParameter("nNDays", nNDays) :
                new ObjectParameter("nNDays", typeof(int));
    
            var nCountryParameter = nCountry.HasValue ?
                new ObjectParameter("nCountry", nCountry) :
                new ObjectParameter("nCountry", typeof(int));
    
            var nCityParameter = nCity.HasValue ?
                new ObjectParameter("nCity", nCity) :
                new ObjectParameter("nCity", typeof(int));
    
            var nPartnerParameter = nPartner.HasValue ?
                new ObjectParameter("nPartner", nPartner) :
                new ObjectParameter("nPartner", typeof(int));
    
            var nAgentParameter = nAgent.HasValue ?
                new ObjectParameter("nAgent", nAgent) :
                new ObjectParameter("nAgent", typeof(int));
    
            var nMenParameter = nMen.HasValue ?
                new ObjectParameter("nMen", nMen) :
                new ObjectParameter("nMen", typeof(int));
    
            var nNettoParameter = nNetto.HasValue ?
                new ObjectParameter("nNetto", nNetto) :
                new ObjectParameter("nNetto", typeof(decimal));
    
            var nBruttoParameter = nBrutto.HasValue ?
                new ObjectParameter("nBrutto", nBrutto) :
                new ObjectParameter("nBrutto", typeof(decimal));
    
            var nDiscountParameter = nDiscount.HasValue ?
                new ObjectParameter("nDiscount", nDiscount) :
                new ObjectParameter("nDiscount", typeof(decimal));
    
            var nPaketParameter = nPaket.HasValue ?
                new ObjectParameter("nPaket", nPaket) :
                new ObjectParameter("nPaket", typeof(int));
    
            var nTourParameter = nTour.HasValue ?
                new ObjectParameter("nTour", nTour) :
                new ObjectParameter("nTour", typeof(int));
    
            var nAttributeParameter = nAttribute.HasValue ?
                new ObjectParameter("nAttribute", nAttribute) :
                new ObjectParameter("nAttribute", typeof(int));
    
            var nControlParameter = nControl.HasValue ?
                new ObjectParameter("nControl", nControl) :
                new ObjectParameter("nControl", typeof(int));
    
            var nCreatorParameter = nCreator.HasValue ?
                new ObjectParameter("nCreator", nCreator) :
                new ObjectParameter("nCreator", typeof(int));
    
            var nOwnerParameter = nOwner.HasValue ?
                new ObjectParameter("nOwner", nOwner) :
                new ObjectParameter("nOwner", typeof(int));
    
            var dBegParameter = dBeg.HasValue ?
                new ObjectParameter("dBeg", dBeg) :
                new ObjectParameter("dBeg", typeof(System.DateTime));
    
            var dEndParameter = dEnd.HasValue ?
                new ObjectParameter("dEnd", dEnd) :
                new ObjectParameter("dEnd", typeof(System.DateTime));
    
            var tTimeParameter = tTime.HasValue ?
                new ObjectParameter("tTime", tTime) :
                new ObjectParameter("tTime", typeof(System.DateTime));
    
            var p_nIsComtmntFirstParameter = p_nIsComtmntFirst.HasValue ?
                new ObjectParameter("p_nIsComtmntFirst", p_nIsComtmntFirst) :
                new ObjectParameter("p_nIsComtmntFirst", typeof(int));
    
            var nDGKeyParameter = nDGKey.HasValue ?
                new ObjectParameter("nDGKey", nDGKey) :
                new ObjectParameter("nDGKey", typeof(int));
    
            var sCommentParameter = sComment != null ?
                new ObjectParameter("sComment", sComment) :
                new ObjectParameter("sComment", typeof(string));
    
            var sFormulaNettoParameter = sFormulaNetto != null ?
                new ObjectParameter("sFormulaNetto", sFormulaNetto) :
                new ObjectParameter("sFormulaNetto", typeof(string));
    
            var sFormulaBruttoParameter = sFormulaBrutto != null ?
                new ObjectParameter("sFormulaBrutto", sFormulaBrutto) :
                new ObjectParameter("sFormulaBrutto", typeof(string));
    
            var sFormulaDiscountParameter = sFormulaDiscount != null ?
                new ObjectParameter("sFormulaDiscount", sFormulaDiscount) :
                new ObjectParameter("sFormulaDiscount", typeof(string));
    
            var sServiceLatParameter = sServiceLat != null ?
                new ObjectParameter("sServiceLat", sServiceLat) :
                new ObjectParameter("sServiceLat", typeof(string));
    
            var nPrtDogParameter = nPrtDog.HasValue ?
                new ObjectParameter("nPrtDog", nPrtDog) :
                new ObjectParameter("nPrtDog", typeof(int));
    
            var nTaxZoneParameter = nTaxZone.HasValue ?
                new ObjectParameter("nTaxZone", nTaxZone) :
                new ObjectParameter("nTaxZone", typeof(int));
    
            var bWaitParameter = bWait.HasValue ?
                new ObjectParameter("bWait", bWait) :
                new ObjectParameter("bWait", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsDogList", sDogovorParameter, dTourParameter, nSvKeyParameter, sServiceParameter, nDayParameter, nCodeParameter, nCode1Parameter, nCode2Parameter, nNDaysParameter, nCountryParameter, nCityParameter, nPartnerParameter, nAgentParameter, nMenParameter, nNettoParameter, nBruttoParameter, nDiscountParameter, nPaketParameter, nTourParameter, nAttributeParameter, nControlParameter, nCreatorParameter, nOwnerParameter, dBegParameter, dEndParameter, tTimeParameter, p_nIsComtmntFirstParameter, bRet, nPrmPlaceNoHave, dPrmBadDate, nNewKey, nDGKeyParameter, sCommentParameter, sFormulaNettoParameter, sFormulaBruttoParameter, sFormulaDiscountParameter, sServiceLatParameter, nPrtDogParameter, nTaxZoneParameter, bWaitParameter);
        }
    
        public virtual int InsDogovor(ObjectParameter nReturn, ObjectParameter nKeyDogovor, string sDogovor, Nullable<System.DateTime> dTour, Nullable<int> nDays, Nullable<int> nTour, Nullable<int> nCountry, Nullable<int> nCity, Nullable<short> nMen, string sRate, Nullable<decimal> nPrice, Nullable<decimal> nPayed, Nullable<decimal> nDiscount, Nullable<int> nDiscountKey, Nullable<short> nPcnt, Nullable<decimal> nDiscountSum, Nullable<int> nCauseDiscount, Nullable<int> nAgent, Nullable<int> nOper, string sOper, string sMainMen, string sMainMenPhone, string sMainMenAdress, string sMainMenPasport, Nullable<int> nOwner, Nullable<int> nStatus, Nullable<short> nPrintVaucher, Nullable<short> nPrintDogovor, Nullable<int> nAdvertiseKey, Nullable<short> nLocked, Nullable<System.DateTime> dVisaDate, Nullable<System.DateTime> dPaymentDate, Nullable<System.DateTime> dPPaymentDate, Nullable<int> nRazmerPPayment, Nullable<int> nPercentPPayment, string sDocument, Nullable<int> nLeadDepartmentKey, string sMainMenEMail, string sMainMenComment, Nullable<int> nDupUserKey, Nullable<int> nBookingTypeKey, Nullable<int> nPartnerDogovorKey, Nullable<int> nCityDepartureKey, Nullable<int> nFilialKey, string sOldDogovor)
        {
            var sDogovorParameter = sDogovor != null ?
                new ObjectParameter("sDogovor", sDogovor) :
                new ObjectParameter("sDogovor", typeof(string));
    
            var dTourParameter = dTour.HasValue ?
                new ObjectParameter("dTour", dTour) :
                new ObjectParameter("dTour", typeof(System.DateTime));
    
            var nDaysParameter = nDays.HasValue ?
                new ObjectParameter("nDays", nDays) :
                new ObjectParameter("nDays", typeof(int));
    
            var nTourParameter = nTour.HasValue ?
                new ObjectParameter("nTour", nTour) :
                new ObjectParameter("nTour", typeof(int));
    
            var nCountryParameter = nCountry.HasValue ?
                new ObjectParameter("nCountry", nCountry) :
                new ObjectParameter("nCountry", typeof(int));
    
            var nCityParameter = nCity.HasValue ?
                new ObjectParameter("nCity", nCity) :
                new ObjectParameter("nCity", typeof(int));
    
            var nMenParameter = nMen.HasValue ?
                new ObjectParameter("nMen", nMen) :
                new ObjectParameter("nMen", typeof(short));
    
            var sRateParameter = sRate != null ?
                new ObjectParameter("sRate", sRate) :
                new ObjectParameter("sRate", typeof(string));
    
            var nPriceParameter = nPrice.HasValue ?
                new ObjectParameter("nPrice", nPrice) :
                new ObjectParameter("nPrice", typeof(decimal));
    
            var nPayedParameter = nPayed.HasValue ?
                new ObjectParameter("nPayed", nPayed) :
                new ObjectParameter("nPayed", typeof(decimal));
    
            var nDiscountParameter = nDiscount.HasValue ?
                new ObjectParameter("nDiscount", nDiscount) :
                new ObjectParameter("nDiscount", typeof(decimal));
    
            var nDiscountKeyParameter = nDiscountKey.HasValue ?
                new ObjectParameter("nDiscountKey", nDiscountKey) :
                new ObjectParameter("nDiscountKey", typeof(int));
    
            var nPcntParameter = nPcnt.HasValue ?
                new ObjectParameter("nPcnt", nPcnt) :
                new ObjectParameter("nPcnt", typeof(short));
    
            var nDiscountSumParameter = nDiscountSum.HasValue ?
                new ObjectParameter("nDiscountSum", nDiscountSum) :
                new ObjectParameter("nDiscountSum", typeof(decimal));
    
            var nCauseDiscountParameter = nCauseDiscount.HasValue ?
                new ObjectParameter("nCauseDiscount", nCauseDiscount) :
                new ObjectParameter("nCauseDiscount", typeof(int));
    
            var nAgentParameter = nAgent.HasValue ?
                new ObjectParameter("nAgent", nAgent) :
                new ObjectParameter("nAgent", typeof(int));
    
            var nOperParameter = nOper.HasValue ?
                new ObjectParameter("nOper", nOper) :
                new ObjectParameter("nOper", typeof(int));
    
            var sOperParameter = sOper != null ?
                new ObjectParameter("sOper", sOper) :
                new ObjectParameter("sOper", typeof(string));
    
            var sMainMenParameter = sMainMen != null ?
                new ObjectParameter("sMainMen", sMainMen) :
                new ObjectParameter("sMainMen", typeof(string));
    
            var sMainMenPhoneParameter = sMainMenPhone != null ?
                new ObjectParameter("sMainMenPhone", sMainMenPhone) :
                new ObjectParameter("sMainMenPhone", typeof(string));
    
            var sMainMenAdressParameter = sMainMenAdress != null ?
                new ObjectParameter("sMainMenAdress", sMainMenAdress) :
                new ObjectParameter("sMainMenAdress", typeof(string));
    
            var sMainMenPasportParameter = sMainMenPasport != null ?
                new ObjectParameter("sMainMenPasport", sMainMenPasport) :
                new ObjectParameter("sMainMenPasport", typeof(string));
    
            var nOwnerParameter = nOwner.HasValue ?
                new ObjectParameter("nOwner", nOwner) :
                new ObjectParameter("nOwner", typeof(int));
    
            var nStatusParameter = nStatus.HasValue ?
                new ObjectParameter("nStatus", nStatus) :
                new ObjectParameter("nStatus", typeof(int));
    
            var nPrintVaucherParameter = nPrintVaucher.HasValue ?
                new ObjectParameter("nPrintVaucher", nPrintVaucher) :
                new ObjectParameter("nPrintVaucher", typeof(short));
    
            var nPrintDogovorParameter = nPrintDogovor.HasValue ?
                new ObjectParameter("nPrintDogovor", nPrintDogovor) :
                new ObjectParameter("nPrintDogovor", typeof(short));
    
            var nAdvertiseKeyParameter = nAdvertiseKey.HasValue ?
                new ObjectParameter("nAdvertiseKey", nAdvertiseKey) :
                new ObjectParameter("nAdvertiseKey", typeof(int));
    
            var nLockedParameter = nLocked.HasValue ?
                new ObjectParameter("nLocked", nLocked) :
                new ObjectParameter("nLocked", typeof(short));
    
            var dVisaDateParameter = dVisaDate.HasValue ?
                new ObjectParameter("dVisaDate", dVisaDate) :
                new ObjectParameter("dVisaDate", typeof(System.DateTime));
    
            var dPaymentDateParameter = dPaymentDate.HasValue ?
                new ObjectParameter("dPaymentDate", dPaymentDate) :
                new ObjectParameter("dPaymentDate", typeof(System.DateTime));
    
            var dPPaymentDateParameter = dPPaymentDate.HasValue ?
                new ObjectParameter("dPPaymentDate", dPPaymentDate) :
                new ObjectParameter("dPPaymentDate", typeof(System.DateTime));
    
            var nRazmerPPaymentParameter = nRazmerPPayment.HasValue ?
                new ObjectParameter("nRazmerPPayment", nRazmerPPayment) :
                new ObjectParameter("nRazmerPPayment", typeof(int));
    
            var nPercentPPaymentParameter = nPercentPPayment.HasValue ?
                new ObjectParameter("nPercentPPayment", nPercentPPayment) :
                new ObjectParameter("nPercentPPayment", typeof(int));
    
            var sDocumentParameter = sDocument != null ?
                new ObjectParameter("sDocument", sDocument) :
                new ObjectParameter("sDocument", typeof(string));
    
            var nLeadDepartmentKeyParameter = nLeadDepartmentKey.HasValue ?
                new ObjectParameter("nLeadDepartmentKey", nLeadDepartmentKey) :
                new ObjectParameter("nLeadDepartmentKey", typeof(int));
    
            var sMainMenEMailParameter = sMainMenEMail != null ?
                new ObjectParameter("sMainMenEMail", sMainMenEMail) :
                new ObjectParameter("sMainMenEMail", typeof(string));
    
            var sMainMenCommentParameter = sMainMenComment != null ?
                new ObjectParameter("sMainMenComment", sMainMenComment) :
                new ObjectParameter("sMainMenComment", typeof(string));
    
            var nDupUserKeyParameter = nDupUserKey.HasValue ?
                new ObjectParameter("nDupUserKey", nDupUserKey) :
                new ObjectParameter("nDupUserKey", typeof(int));
    
            var nBookingTypeKeyParameter = nBookingTypeKey.HasValue ?
                new ObjectParameter("nBookingTypeKey", nBookingTypeKey) :
                new ObjectParameter("nBookingTypeKey", typeof(int));
    
            var nPartnerDogovorKeyParameter = nPartnerDogovorKey.HasValue ?
                new ObjectParameter("nPartnerDogovorKey", nPartnerDogovorKey) :
                new ObjectParameter("nPartnerDogovorKey", typeof(int));
    
            var nCityDepartureKeyParameter = nCityDepartureKey.HasValue ?
                new ObjectParameter("nCityDepartureKey", nCityDepartureKey) :
                new ObjectParameter("nCityDepartureKey", typeof(int));
    
            var nFilialKeyParameter = nFilialKey.HasValue ?
                new ObjectParameter("nFilialKey", nFilialKey) :
                new ObjectParameter("nFilialKey", typeof(int));
    
            var sOldDogovorParameter = sOldDogovor != null ?
                new ObjectParameter("sOldDogovor", sOldDogovor) :
                new ObjectParameter("sOldDogovor", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsDogovor", nReturn, nKeyDogovor, sDogovorParameter, dTourParameter, nDaysParameter, nTourParameter, nCountryParameter, nCityParameter, nMenParameter, sRateParameter, nPriceParameter, nPayedParameter, nDiscountParameter, nDiscountKeyParameter, nPcntParameter, nDiscountSumParameter, nCauseDiscountParameter, nAgentParameter, nOperParameter, sOperParameter, sMainMenParameter, sMainMenPhoneParameter, sMainMenAdressParameter, sMainMenPasportParameter, nOwnerParameter, nStatusParameter, nPrintVaucherParameter, nPrintDogovorParameter, nAdvertiseKeyParameter, nLockedParameter, dVisaDateParameter, dPaymentDateParameter, dPPaymentDateParameter, nRazmerPPaymentParameter, nPercentPPaymentParameter, sDocumentParameter, nLeadDepartmentKeyParameter, sMainMenEMailParameter, sMainMenCommentParameter, nDupUserKeyParameter, nBookingTypeKeyParameter, nPartnerDogovorKeyParameter, nCityDepartureKeyParameter, nFilialKeyParameter, sOldDogovorParameter);
        }
    
        public virtual int MakePutName(Nullable<System.DateTime> date, Nullable<int> countryKey, Nullable<int> cityKey, Nullable<int> tourKey, Nullable<int> partnerKey, string sFormat0, ObjectParameter name)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            var countryKeyParameter = countryKey.HasValue ?
                new ObjectParameter("countryKey", countryKey) :
                new ObjectParameter("countryKey", typeof(int));
    
            var cityKeyParameter = cityKey.HasValue ?
                new ObjectParameter("cityKey", cityKey) :
                new ObjectParameter("cityKey", typeof(int));
    
            var tourKeyParameter = tourKey.HasValue ?
                new ObjectParameter("tourKey", tourKey) :
                new ObjectParameter("tourKey", typeof(int));
    
            var partnerKeyParameter = partnerKey.HasValue ?
                new ObjectParameter("partnerKey", partnerKey) :
                new ObjectParameter("partnerKey", typeof(int));
    
            var sFormat0Parameter = sFormat0 != null ?
                new ObjectParameter("sFormat0", sFormat0) :
                new ObjectParameter("sFormat0", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MakePutName", dateParameter, countryKeyParameter, cityKeyParameter, tourKeyParameter, partnerKeyParameter, sFormat0Parameter, name);
        }
    
        public virtual int GetNewKeys(string sTable, Nullable<int> nKeyCount, ObjectParameter nNewKey)
        {
            var sTableParameter = sTable != null ?
                new ObjectParameter("sTable", sTable) :
                new ObjectParameter("sTable", typeof(string));
    
            var nKeyCountParameter = nKeyCount.HasValue ?
                new ObjectParameter("nKeyCount", nKeyCount) :
                new ObjectParameter("nKeyCount", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetNewKeys", sTableParameter, nKeyCountParameter, nNewKey);
        }
    
        public virtual int MakeFullSVName(Nullable<int> nCountry, Nullable<int> nCity, Nullable<int> nSvKey, Nullable<int> nCode, Nullable<int> nNDays, Nullable<int> nCode1, Nullable<int> nCode2, Nullable<int> nPartner, Nullable<System.DateTime> dServDate, string sServiceByHand, ObjectParameter sResult, ObjectParameter sResultLat, ObjectParameter dTimeBeg, ObjectParameter dTimeEnd)
        {
            var nCountryParameter = nCountry.HasValue ?
                new ObjectParameter("nCountry", nCountry) :
                new ObjectParameter("nCountry", typeof(int));
    
            var nCityParameter = nCity.HasValue ?
                new ObjectParameter("nCity", nCity) :
                new ObjectParameter("nCity", typeof(int));
    
            var nSvKeyParameter = nSvKey.HasValue ?
                new ObjectParameter("nSvKey", nSvKey) :
                new ObjectParameter("nSvKey", typeof(int));
    
            var nCodeParameter = nCode.HasValue ?
                new ObjectParameter("nCode", nCode) :
                new ObjectParameter("nCode", typeof(int));
    
            var nNDaysParameter = nNDays.HasValue ?
                new ObjectParameter("nNDays", nNDays) :
                new ObjectParameter("nNDays", typeof(int));
    
            var nCode1Parameter = nCode1.HasValue ?
                new ObjectParameter("nCode1", nCode1) :
                new ObjectParameter("nCode1", typeof(int));
    
            var nCode2Parameter = nCode2.HasValue ?
                new ObjectParameter("nCode2", nCode2) :
                new ObjectParameter("nCode2", typeof(int));
    
            var nPartnerParameter = nPartner.HasValue ?
                new ObjectParameter("nPartner", nPartner) :
                new ObjectParameter("nPartner", typeof(int));
    
            var dServDateParameter = dServDate.HasValue ?
                new ObjectParameter("dServDate", dServDate) :
                new ObjectParameter("dServDate", typeof(System.DateTime));
    
            var sServiceByHandParameter = sServiceByHand != null ?
                new ObjectParameter("sServiceByHand", sServiceByHand) :
                new ObjectParameter("sServiceByHand", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MakeFullSVName", nCountryParameter, nCityParameter, nSvKeyParameter, nCodeParameter, nNDaysParameter, nCode1Parameter, nCode2Parameter, nPartnerParameter, dServDateParameter, sServiceByHandParameter, sResult, sResultLat, dTimeBeg, dTimeEnd);
        }
    }
}
